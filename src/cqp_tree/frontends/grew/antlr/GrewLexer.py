# Generated from Grew.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,27,178,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,
        1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
        1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,13,1,13,
        1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,
        1,18,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,4,22,123,8,22,
        11,22,12,22,124,1,22,1,22,1,23,1,23,5,23,131,8,23,10,23,12,23,134,
        9,23,1,23,1,23,1,24,4,24,139,8,24,11,24,12,24,140,1,24,1,24,1,24,
        5,24,146,8,24,10,24,12,24,149,9,24,1,24,3,24,152,8,24,1,25,1,25,
        1,25,1,25,5,25,158,8,25,10,25,12,25,161,9,25,1,25,1,25,1,26,1,26,
        1,26,1,26,5,26,169,8,26,10,26,12,26,172,9,26,1,26,1,26,1,26,3,26,
        177,8,26,0,0,27,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,47,24,49,25,51,26,53,27,1,0,8,3,0,9,10,13,13,32,32,2,0,
        10,10,13,13,1,0,48,57,3,0,65,90,95,95,97,122,7,0,36,36,39,39,45,
        45,48,57,65,90,95,95,97,122,6,0,36,36,39,39,48,57,65,90,95,95,97,
        122,1,0,34,34,1,0,47,47,189,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
        17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
        27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
        37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
        47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,1,55,1,0,0,0,3,
        63,1,0,0,0,5,68,1,0,0,0,7,76,1,0,0,0,9,78,1,0,0,0,11,80,1,0,0,0,
        13,82,1,0,0,0,15,84,1,0,0,0,17,86,1,0,0,0,19,88,1,0,0,0,21,90,1,
        0,0,0,23,92,1,0,0,0,25,94,1,0,0,0,27,97,1,0,0,0,29,100,1,0,0,0,31,
        104,1,0,0,0,33,106,1,0,0,0,35,108,1,0,0,0,37,111,1,0,0,0,39,113,
        1,0,0,0,41,116,1,0,0,0,43,118,1,0,0,0,45,122,1,0,0,0,47,128,1,0,
        0,0,49,151,1,0,0,0,51,153,1,0,0,0,53,164,1,0,0,0,55,56,5,112,0,0,
        56,57,5,97,0,0,57,58,5,116,0,0,58,59,5,116,0,0,59,60,5,101,0,0,60,
        61,5,114,0,0,61,62,5,110,0,0,62,2,1,0,0,0,63,64,5,119,0,0,64,65,
        5,105,0,0,65,66,5,116,0,0,66,67,5,104,0,0,67,4,1,0,0,0,68,69,5,119,
        0,0,69,70,5,105,0,0,70,71,5,116,0,0,71,72,5,104,0,0,72,73,5,111,
        0,0,73,74,5,117,0,0,74,75,5,116,0,0,75,6,1,0,0,0,76,77,5,123,0,0,
        77,8,1,0,0,0,78,79,5,59,0,0,79,10,1,0,0,0,80,81,5,125,0,0,81,12,
        1,0,0,0,82,83,5,124,0,0,83,14,1,0,0,0,84,85,5,58,0,0,85,16,1,0,0,
        0,86,87,5,91,0,0,87,18,1,0,0,0,88,89,5,44,0,0,89,20,1,0,0,0,90,91,
        5,93,0,0,91,22,1,0,0,0,92,93,5,33,0,0,93,24,1,0,0,0,94,95,5,45,0,
        0,95,96,5,62,0,0,96,26,1,0,0,0,97,98,5,45,0,0,98,99,5,91,0,0,99,
        28,1,0,0,0,100,101,5,93,0,0,101,102,5,45,0,0,102,103,5,62,0,0,103,
        30,1,0,0,0,104,105,5,94,0,0,105,32,1,0,0,0,106,107,5,46,0,0,107,
        34,1,0,0,0,108,109,5,114,0,0,109,110,5,101,0,0,110,36,1,0,0,0,111,
        112,5,60,0,0,112,38,1,0,0,0,113,114,5,60,0,0,114,115,5,60,0,0,115,
        40,1,0,0,0,116,117,5,61,0,0,117,42,1,0,0,0,118,119,5,60,0,0,119,
        120,5,62,0,0,120,44,1,0,0,0,121,123,7,0,0,0,122,121,1,0,0,0,123,
        124,1,0,0,0,124,122,1,0,0,0,124,125,1,0,0,0,125,126,1,0,0,0,126,
        127,6,22,0,0,127,46,1,0,0,0,128,132,5,37,0,0,129,131,8,1,0,0,130,
        129,1,0,0,0,131,134,1,0,0,0,132,130,1,0,0,0,132,133,1,0,0,0,133,
        135,1,0,0,0,134,132,1,0,0,0,135,136,6,23,0,0,136,48,1,0,0,0,137,
        139,7,2,0,0,138,137,1,0,0,0,139,140,1,0,0,0,140,138,1,0,0,0,140,
        141,1,0,0,0,141,152,1,0,0,0,142,152,7,3,0,0,143,147,7,3,0,0,144,
        146,7,4,0,0,145,144,1,0,0,0,146,149,1,0,0,0,147,145,1,0,0,0,147,
        148,1,0,0,0,148,150,1,0,0,0,149,147,1,0,0,0,150,152,7,5,0,0,151,
        138,1,0,0,0,151,142,1,0,0,0,151,143,1,0,0,0,152,50,1,0,0,0,153,159,
        5,34,0,0,154,158,8,6,0,0,155,156,5,92,0,0,156,158,5,46,0,0,157,154,
        1,0,0,0,157,155,1,0,0,0,158,161,1,0,0,0,159,157,1,0,0,0,159,160,
        1,0,0,0,160,162,1,0,0,0,161,159,1,0,0,0,162,163,5,34,0,0,163,52,
        1,0,0,0,164,170,5,47,0,0,165,169,8,7,0,0,166,167,5,92,0,0,167,169,
        5,47,0,0,168,165,1,0,0,0,168,166,1,0,0,0,169,172,1,0,0,0,170,168,
        1,0,0,0,170,171,1,0,0,0,171,176,1,0,0,0,172,170,1,0,0,0,173,177,
        5,47,0,0,174,175,5,47,0,0,175,177,5,105,0,0,176,173,1,0,0,0,176,
        174,1,0,0,0,176,177,1,0,0,0,177,54,1,0,0,0,11,0,124,132,140,147,
        151,157,159,168,170,176,1,6,0,0
    ]

class GrewLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    IgnoredWhitespace = 23
    IgnoredComments = 24
    Identifier = 25
    String = 26
    PCREString = 27

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'pattern'", "'with'", "'without'", "'{'", "';'", "'}'", "'|'", 
            "':'", "'['", "','", "']'", "'!'", "'->'", "'-['", "']->'", 
            "'^'", "'.'", "'re'", "'<'", "'<<'", "'='", "'<>'" ]

    symbolicNames = [ "<INVALID>",
            "IgnoredWhitespace", "IgnoredComments", "Identifier", "String", 
            "PCREString" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "IgnoredWhitespace", "IgnoredComments", 
                  "Identifier", "String", "PCREString" ]

    grammarFileName = "Grew.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


